apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: obkauthorizators.jfvilas.at.outlook.com
  namespace: default
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: jfvilas.at.outlook.com
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                ingress:
                  description: 'An origin ingress controller can be specified, so Oberkorn controller can make automatic configuration for you. You must provide the ingress class (nginx) and the ingress name. It should be deployed to the same namespace as the Oberkorn controller .'
                  type: object
                  properties:
                    name:
                      description: The name of the ingress controller.
                      type: string
                    class:
                      description: The class of the ingress controller, currently only 'nginx' class is supported.
                      type: string
                    provider:
                      description: The provider of the ingress controller
                      type: string
                      enum: [ 'ingress-nginx', 'nginx-ingress', 'haproxy', 'traefik']
                  required: [ name, provider ]
                config:
                  description: 'General authorizator configuration regarding performance, monitoring and behaviour.'
                  type: object
                  properties:
                    replicas:
                      description: Number of replicas of the same Oberkron authorizator to deploy.
                      type: number
                      default: 1
                    prometheus:
                      description: true if you want the Oberkorn controller to provide prometheus metrics.
                      type: boolean
                      default: false
                    logLevel:
                      description: A number between 0 and 9 (0 is less log, 9 is very verbose).
                      type: number
                      default: 0
                validators:
                  description: A list of endpoints that can provide keys for decoding and validating tokens (JWT or whatever). A validator is typically an IDM like KeyCloak, AWS Cognito, Azure AD...
                  type: array
                  items:
                    type: object
                    properties:
                      azureB2c:
                        description: Parameters to define an Azure B2C validator.
                        type: object
                        properties:
                          name:
                            type: string
                          schedule:
                            type: string
                          verify:
                            type: boolean
                            default: true
                          tenant:
                            type: string
                          userflow:
                            type: string
                          aud:
                            type: string
                          iss:
                            type: string
                        required: [ name, tenant, userflow ]
                      google:
                        description: Parameters to define a Google validator.
                        type: object
                        properties:
                          name:
                            type: string
                          verify:
                            type: boolean
                            default: true
                          aud:
                            type: string
                          iss:
                            type: string
                        required: [ name ]
                      cognito:
                        description: Parameters to define an AWS Cognito validator.
                        type: object
                        properties:
                          name:
                            type: string
                          schedule:
                            type: string
                          verify:
                            type: boolean
                            default: true
                          region:
                            type: string
                          userpool:
                            type: string
                          aud:
                            type: string
                          iss:
                            type: string
                        required: [ name, region, userpool ]
                      azureAd:
                        description: Parameters to define an Azure AD (i.e. Entra ID) validator.
                        type: object
                        properties:
                          name:
                            type: string
                          schedule:
                            type: string
                          verify:
                            type: boolean
                            default: true
                          tenant:
                            type: string
                          aud:
                            type: string
                          iss:
                            type: string
                        required: [ name, tenant ]
                      basicAuth:
                        description: Parameters to define a Basic authorization validator using a list of us/pw.
                        type: object
                        properties:
                          name:
                            type: string
                          realm:
                            type: string
                          storeSecret:
                              type: string
                          storeKey:
                              type: string
                          storeType:
                              description: Type of store for the Basic Auth user list
                              type: string
                              default: inline
                              enum: [ 'inline', 'secret' ]
                          users:
                            description: An array of users and passwords. If store type is inline users DB is a fixed list. If store type is secret this array will be dump to a secret on controller start (if such secret does not exist), so users can change its passwords.
                            type: array
                            items:
                              type: object
                              properties: 
                                name:
                                  type: string
                                password:
                                  type: string
                        required: [ name, users ]
                      keycloak:
                        description: Parameters to define a KeyCloak validator.
                        type: object
                        properties:
                          name:
                            type: string
                          schedule:
                            type: string
                          verify:
                            type: boolean
                            default: true
                          url:
                            type: string
                          realm:
                            type: string
                          aud:
                            type: string
                          iss:
                            type: string
                        required: [ name, realm]
                      custom:
                        description: Parameters to define a Custom validator using a configmap as source for the javascript function.
                        type: object
                        properties:
                          name:
                            type: string
                          configMap:
                            type: string
                          key:
                            type: string
                          requestHeader:
                            type: string
                          responseHeader:
                            type: string
                        required: [ name, configMap ]

                ruleset:
                  description: A list of the rules you want to use to validate access to resources, that is, URIs and token conditions.
                  type: array
                  items:
                    type: object
                    properties:
                      uri:
                        type: string
                      uritype:
                        type: string
                        enum: [ prefix, exact, regex ]
                      type:
                        type: string
                        enum: [ unrestricted, valid, claim, or, and ]
                      name:
                        type: string
                      validators:
                        type: array
                        items:
                          type: string
                      policy:
                        type: string
                        enum: [ present, notpresent, is, containsany, containsall, matchesany, matchesall ]
                      options:
                        type: array
                        items:
                          type: string
                          enum: [ lowercase, uppercase ]
                      subset:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              enum: [ unrestricted, valid, claim ]
                            name:
                              type: string
                            policy:
                              type: string
                              enum: [ present, notpresent, is, containsany, containsall, matchesany, matchesall ]
                            values:
                              type: array
                              items:
                                type: string
                            ontrue:
                              type: string
                              enum: [ accept, reject, continue ]
                              default: accept
                            onfalse:
                              type: string
                              enum: [ accept, reject, continue ]
                              default: continue
                      values:
                        type: array
                        items:
                          type: string
                      ontrue:
                        type: string
                        enum: [ accept, reject, continue ]
                        default: accept
                      onfalse:
                        type: string
                        enum: [ accept, reject, continue ]
                        default: continue
                    required: [ uri, uritype, type ]
                      
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: obkauthorizators
    # singular name to be used as an alias on the CLI and for display
    singular: obkauthorizator
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: ObkAuthorizator
    # shortNames allow shorter string to match your resource on the CLI
    shortNames: [ obk ]
  
  